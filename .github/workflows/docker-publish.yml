name: Docker publish

on:
  schedule:
    - cron: '45 0 * * *'
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:

  build-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - TraderEngine.API
          - TraderEngine.CLI
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v3.0
        with:
          versionSpec: '5.x'
      -
        name: Execute GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.0
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        env:
          IS_PUSH: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
          IS_MAIN: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
        with:
          images: |
            ${{ secrets.CR_REGISTRY }}/${{ matrix.project }}
          tags: |
            type=schedule,pattern=nightly
            type=raw,enable=${{ env.IS_PUSH && env.IS_MAIN }},value=nightly
            type=raw,enable=${{ env.IS_PUSH && env.IS_MAIN }},value=latest
            type=raw,enable=${{ env.IS_PUSH }},value=${{ steps.gitversion.outputs.semVer }}
      -
        name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8'
      # -
      #   name: Restore NuGet packages
      #   run: dotnet restore "TraderEngine.API.csproj"
      # -
      #   name: Run unit tests
      #   run: dotnet test "${{ matrix.project }}Tests/*.csproj" -c Debug
      -
        name: Publish release build
        run: dotnet publish "${{ matrix.project }}/${{ matrix.project }}.csproj" -c Release /p:UseAppHost=false
      -
        name: Login to Docker CR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.CR_REGISTRY }}
          username: ${{ secrets.CR_USERNAME }}
          password: ${{ secrets.CR_PASSWORD }}
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      -
        name: Build and push ${{ matrix.project }}
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.project }}
          tags: ${{ steps.meta.outputs.tags }}
          platforms: ${{ steps.buildx.outputs.platforms }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}
